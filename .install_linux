#!/usr/bin/env bash

function pkgmgr_install() {
	local package_ext=".i686"
	if [ architecture = 64 ]; then
		package_ext=".x86_64"
	fi

	local installer="yum"
	local nix_release=`linix_release`
	if [ nix_release = "ubuntu" ]; then
		installer="apt"
	fi


	if [ ! -z $1 ]; then
		python_version="$1"
	fi



	local pkg
	local pkgs
	for pkg in $@; do
		if [ "$installer" = "apt" ]; then
			pkgs+=("$pkg")
	else
			pkgs+=("$pkg$package_ext")
		fi
	done
	pkgs=`printf "%s " "${pkgs[@]}"`
	sudo $installer install -y $pkgs
}

function install_python_src() {
	local package_ext=".i686"
	local package_dir="$USER/Downloads/package"
	local python_version="2.7.12"
	local install_prefix=""

	if [ ! -z $1 ]; then
		python_version="$1"
	fi
	if [ ! -z $2 ]; then
		install_prefix="--prefix=$2"
	fi

	# Install dependencies
	pkgmgr_install zlib-devel openssl-devel readline-devel sqlite-devel gcc-c++

	# Setup environment
	mkdir -p $package_dir

	# Downlaod Requirements
	wget https://bootstrap.pypa.io/get-pip.py --directory-prefix=$package_dir
	wget http://www.python.org/ftp/python/$python_version/Python-$python_version.tgz --directory-prefix=$package_dir

	# Extract
	tar zxf $package_dir/Python-$python_version.tgz -C $package_dir

	# Install
	## Python
	$package_dir/Python-$python_version/configure $install_prefix
	make $package_dir/Python-$python_version
	if [ "$install_prefix" = "" ]; then
		echo "Running with sudo"
		sudo make install $package_dir/Python-$python_version
		## Pip
		sudo python $package_dir/get-pip.py
	else
		make install $package_dir/Python-$python_version
		## Pip
		python $package_dir/get-pip.py
	fi


	# Cleanup
	rm -fr $package_dir/get-pip.py
	rm $package_dir/Python-$python_version.tgz
	rm -fr $package_dir/Python-$python_version

	unset package_dir
	unset install_prefix
	unset python_version
}
